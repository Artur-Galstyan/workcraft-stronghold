package layout

templ Base() {
	<!DOCTYPE html>
	<html lang="en" data-theme="light">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>Workcraft Stronghold</title>
			<link rel="stylesheet" href="/static/css/output.css"/>
			<script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
			<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
			<script defer>

    const originalFetch = window.fetch;

    window.Toast = Swal.mixin({
        toast: true,
        position: "top-end",
        showConfirmButton: false,
        timer: 3000,
        timerProgressBar: true,
        didOpen: (toast) => {
            toast.onmouseenter = Swal.stopTimer;
            toast.onmouseleave = Swal.resumeTimer;
        }
    });

    window.fetch = async function(url, options = {}) {
        try {
            const response = await originalFetch(url, options);
            if (response.status === 401) {
                window.location.replace('/login');
                return;
            }
            return response;
        } catch (error) {
            console.error('Fetch error:', error);
            throw error;
        }
    };

    window.getSSE = function() {
        const currentUrl = new URL(window.location.href);
        const isHTTPS = currentUrl.protocol === 'https:';
        const sseURL = `${currentUrl.protocol}//${currentUrl.host}/events?type=chieftain`;

        return new EventSource(sseURL, { withCredentials: isHTTPS });
    }

    window.getUUID = function() {
      return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>
        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
      );
    }

    window.getStatusColor = function(status) {
          const colors = {
              'PENDING': 'bg-yellow-100 text-yellow-800',
              'RUNNING': 'bg-blue-100 text-blue-800',
              'SUCCESS': 'bg-green-100 text-green-800',
              'FAILURE': 'bg-red-100 text-red-800',
              'INVALID': 'bg-gray-100 text-gray-800',
              'CANCELLED': 'bg-gray-100 text-gray-800'
          };
          return colors[status] || 'bg-gray-100 text-gray-800';
      }

    </script>
		</head>
		<nav>
			<h1>
				<a href="/">
					WorkCraft
				</a>
			</h1>
		</nav>
		<body class="w-11/12 mx-auto">
			{ children... }
		</body>
	</html>
}
