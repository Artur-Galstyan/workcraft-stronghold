 <script defer>\n            let socket = null;\n            const peonID = JSON.parse(document.getElementById('peonID').innerText);\n            console.log('Peon ID:', peonID);\n\n            function keepReconnecting() {\n                if (socket === null) {\n                    console.log('No socket, reconnecting');\n                    socket = window.getWebsocket();\n\n                    socket.onopen = function() {\n                        console.log('Connected');\n                        reconnectAttempts = 0;\n                    };\n\n                    socket.onmessage = function(e) {\n                        const data = JSON.parse(e.data);\n                        if (data.type === 'peon_update' && data.message.peon.id === peonID) {\n                            setPeon(data.message.peon);\n                        }\n                    };\n\n                    socket.onerror = function(error) {\n                        console.error('WebSocket error:', error);\n                    };\n\n                    socket.onclose = function(e) {\n                        console.log('Disconnected:', e.code, e.reason);\n                        socket = null;\n                    };\n                }\n            }\n\n\n            function setPeon(peon) {\n                // Update status with color coding\n                const statusEl = document.getElementById('peon-status');\n                statusEl.textContent = peon.status;\n                statusEl.className = `px-2 py-1 rounded-full text-sm inline-block ${\n                    peon.status === 'IDLE' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n                }`;\n\n                // Format and set timestamp\n                const timestamp = new Date(peon.last_heartbeat)\n                    .toLocaleString('en-US', {\n                        year: 'numeric',\n                        month: '2-digit',\n                        day: '2-digit',\n                        hour: '2-digit',\n                        minute: '2-digit',\n                        second: '2-digit'\n                    });\n                document.getElementById('peon-heartbeat').textContent = timestamp;\n\n                // Update queues\n                document.getElementById('peon-queues').textContent =\n                    Array.isArray(peon.queues) ? peon.queues.join(', ') : peon.queues;\n\n                // Update current task\n                const taskEl = document.getElementById('peon-currenttask');\n                if (peon.current_task) {\n                    taskEl.href = `/task/${peon.current_task}`;\n                    taskEl.textContent = peon.current_task;\n                    taskEl.className = 'text-blue-600 hover:underline';\n                } else {\n                    taskEl.removeAttribute('href');\n                    taskEl.textContent = 'No active task';\n                    taskEl.className = 'text-gray-500';\n                }\n            }\n\n            function updateTaskHistory(tasks) {\n                const tbody = document.getElementById('task-history');\n                tbody.innerHTML = '';\n\n                if (tasks.length === 0) {\n                    const row = document.createElement('tr');\n                    row.innerHTML = `\n                        <td colspan=\"2\" class=\"text-center py-4 text-gray-500\">\n                            No task history available\n                        </td>\n                    `;\n                    tbody.appendChild(row);\n                    return;\n                }\n\n                tasks.forEach(task => {\n                    const row = document.createElement('tr');\n                    row.className = 'hover:bg-gray-50';\n                    row.innerHTML = `\n                        <td class=\"px-4 py-3 border-b\">\n                            <a href=\"/task/${task.id}\" class=\"text-blue-600 hover:underline\">\n                                ${task.id}\n                            </a>\n                        </td>\n                        <td class=\"px-4 py-3 border-b\">${task.task_name}</td>\n                        <td class=\"px-4 py-3 border-b\">\n                            <span class=\"px-2 py-1 rounded-full text-sm inline-block ${\n                              window.getStatusColor(task.status)\n                            }\">\n                                ${task.status}\n                            </span>\n                        </td>\n                    `;\n                    tbody.appendChild(row);\n                });\n            }\n\n\n            async function pollPeonData() {\n                try {\n                    const response = await fetch(`/api/peon/${peonID}`);\n                    if (!response.ok) throw new Error('Failed to fetch peon data');\n                    const peon = await response.json();\n                    setPeon(peon);\n                } catch (error) {\n                    console.error('Error polling peon data:', error);\n                }\n            }\n\n            async function pollTaskHistory() {\n                try {\n                    const response = await fetch(`/api/peon/${peonID}/tasks`);\n                    if (!response.ok) throw new Error('Failed to fetch task history');\n                    const tasks = await response.json();\n                    updateTaskHistory(tasks);\n                    document.getElementById('table-wrapper').classList.remove('animate-pulse');\n                } catch (error) {\n                    console.error('Error polling task history:', error);\n                }\n            }\n\n            $(document).ready(function() {\n              console.log('Document ready');\n              pollPeonData();\n              pollTaskHistory();\n\n              setInterval(keepReconnecting, 1000);\n              setInterval(pollPeonData, 5000);\n              setInterval(pollTaskHistory, 5000);\n            });\n\n        </script> <div class=\"max-w-4xl mx-auto p-6\"><!-- Peon Status Card --><div class=\"bg-gray-50 rounded-lg shadow-sm border border-gray-200 p-6 mb-8\"><h1 class=\"text-2xl font-bold mb-6 text-gray-700\">Peon Status</h1><div class=\"grid gap-4 md:grid-cols-2\"><div class=\"space-y-4\"><div class=\"flex items-center gap-2\"><span class=\"font-medium\">ID:</span> <span class=\"font-mono text-sm\">
</span></div><div class=\"flex items-center gap-2\"><span class=\"font-medium\">Status:</span> <span id=\"peon-status\" class=\"px-2 py-1 rounded-full text-sm bg-gray-100\">Loading...</span></div></div><div class=\"space-y-4\"><div class=\"flex items-center gap-2\"><span class=\"font-medium\">Last Heartbeat:</span> <span id=\"peon-heartbeat\" class=\"text-gray-600\">Loading...</span></div><div class=\"flex items-center gap-2\"><span class=\"font-medium\">Queues:</span> <span id=\"peon-queues\" class=\"text-gray-600\">Loading...</span></div></div></div><div class=\"mt-4\"><span class=\"font-medium\">Current Task:</span> <a id=\"peon-currenttask\" class=\"ml-2 text-gray-500\">Loading...</a></div></div><!-- Task History --><div class=\"bg-gray-50 rounded-lg shadow-sm border border-gray-200 p-6\"><h2 class=\"text-xl font-bold mb-6 text-gray-700\">Task History</h2><div id=\"table-wrapper\" class=\"overflow-x-auto animate-pulse\"><table class=\"min-w-full\"><thead class=\"bg-gray-100\"><tr><th class=\"px-4 py-3 text-left text-sm font-semibold text-gray-900 border-b\">Task ID</th><th class=\"px-4 py-3 text-left text-sm font-semibold text-gray-900 border-b\">Task Name</th><th class=\"px-4 py-3 text-left text-sm font-semibold text-gray-900 border-b\">Status</th></tr></thead> <tbody id=\"task-history\" class=\"divide-y divide-gray-200\"><tr><td colspan=\"2\" class=\"text-center py-4 text-gray-500\">Loading...</td></tr></tbody></table></div></div></div>
